---
title: "practica_final"
format: html
editor: visual
---

Vamos a utilizar el dataset de semillas que se encuentra aquí: https://archive.ics.uci.edu/ml/datasets/seeds#

Primero vamos a descargarnos el dataset con el siguiente comando:

```{r}
library(tidyverse)
df_seeds <- read.table('https://archive.ics.uci.edu/ml/machine-learning-databases/00236/seeds_dataset.txt', col.names =c('area','perimetro','compacto','longitud','anchura','coeficient.asimetria','longitud.ranura','tipo'))
```

#### PREGUNTA 1 (0.5pt)

¿Cuantas filas y cuantas columnas tiene el dataframe df_seeds?

**Respuesta**:

```{r}
#el dataframe df_seeds tiene: columnas:8 y filas: 210.
head(df_seeds)
colnames(df_seeds)
print(df_seeds)
```

#### PREGUNTA 2 (0.5pt)

Vamos a convertir en factor la columna tipo. Vamos a reemplazar los números por su correspondiente etiqueta (label). La correspondencia entre el código y el tipo es:

-   1 - Kama
-   2 - Rosa
-   3 - Canadian

Convierte en factor la columna tipo, respetando las etiquetas:

**Respuesta**:

```{r}
df_seeds$tipo <- factor(df_seeds$tipo,levels = c(1,2,3),labels = c("Kama", "Rosa", "Canadian"))
head(df_seeds)

```

#### PREGUNTA 3 (1pt)

¿Cual es la media del area de cada uno de los tipos?

**Respuesta**

```{r}
media_de_cada_tipo <- df_seeds |>
  group_by(tipo) |>
  summarise(media_del_area = mean(area))
print(media_de_cada_tipo)
```

#### PREGUNTA 4 (0.5pt)

¿Como se llama el siguiente tipo de gráfico?. ¿Qué representa la línea del centro de la caja?

```{r}
library(ggplot2)
ggplot(df_seeds, aes(x=tipo, y=area)) + geom_boxplot()
```

**Respuesta**:

```{r}
#El siguiente gráfico se llama boxplot que lleva una representación de "caja y bigote", la caja representa el intercuartilo medio que abarcan el 50% central de los datos.Mientras la línea dentro de la caja(la mediana)divide el IQR en dos mitades iguales.
```

#### PREGUNTA 5 (1.5pt)

¿Como pintarías un diagrama de puntos (o scatterplot) con ggplot con las siguientes características? - En el eje X la variable compacto - En el eje Y la variable area - Cada tipo de semilla debería tener un color diferente

**Respuesta**:

```{r}
library(ggplot2)
ggplot(df_seeds, aes(x = compacto, y = area, color = tipo))+geom_point()+labs(x = "Compacto", y = "Area",title = "Diagrama de puntos")+ scale_color_manual(values = c("blue", "red", "green"), labels = c("Kama", "Rosa", "Canadian"))
```

#### PREGUNTA 6 (0.5pt)

¿Qué hace la siguiente línea?:

```{r}
df_seeds |> mutate(is_kama = tipo=='Kama') -> df_seeds
```

**Respuesta**:

```{r}
#La siguiente línea de código usa el operador (|>) para encadenar una operación con "mutate()" al dataframe, dentro del "mutate" , esta "is_kama" que será TRUE en la columna "Tipo" si es igual a "KAMA" de lo contrario será FALSE.De esta manera  se sobreescribirá el dataframe con el resultado modificado. 
```

#### PREGUNTA 7 (1.5pt)

Vamos a dividir el conjunto de datos en test y training porque vamos a entrenar un modelo que me permita diferenciar si una semilla es de tipo Kama o no. ¿Por qué es aconsejable dividir el dataset en los grupos de train y test?

```{r}
set.seed(123) # Este set.seed hace que a todos nos generen los mismos número aleatorios
idx <- sample(1:nrow(df_seeds), 0.7*nrow(df_seeds))
df_seeds_train <- df_seeds[idx,]
df_seeds_test <- df_seeds[-idx,]
```

**Respuesta**:

```{r}
#Es aconsejable dividir el dataset en los grupos de train y test , por qué el conjunto de entrenamiento "df_seeds_train"  se usará para que el modelo que distinga las semillas del Kama del resto.Mientras que  el conjunto  de prueba "df_seeds_test"se usará para evaluar el rendimiento del modelo entrenado.
```

#### PREGUNTA 8 (1pt)

Vamos a crear un modelo para realizar una clasificación binaria, donde le pasaremos como entrada las columnas: area, perimetro, compacto, longitud, coeficient.asimetria y longitud.ranura

¿Qué tipo de algoritmo o modelo debería usar?

**Respuesta**:

```{r}
#El tipo de modelo que se aplicará será de regresión logística dado que se creará para realizar una clasificación binaria.
modelo <- glm(tipo ~ area + perimetro + compacto + longitud + coeficient.asimetria +longitud.ranura,data = df_seeds_train, family = binomial)
summary(modelo)
```

#### PREGUNTA 9 (1pt)

Crea un modelo que me permita clasificar si una semilla es de tipo Kama o no con las siguientes columnas: area, perimetro, compacto, longitud, coeficient.asimetria, longitud.ranura

**Respuesta**:

```{r}
set.seed(123)
idx <- sample(1:nrow(df_seeds), 0.7 * nrow(df_seeds))
df_seeds_train <- df_seeds[idx,]
df_seeds_test  <- df_seeds[-idx,]

modelo <- glm(tipo ~ area + perimetro + compacto + longitud + coeficient.asimetria +longitud.ranura,data = df_seeds_train, family = binomial)

summary(modelo)

predicciones <- predict(modelo, newdata = df_seeds_test, type = "response")
predicciones_de_clasificacion <- ifelse(predicciones > 0.5, "Kama", "No Kama")


```

#### PREGUNTA 10 (1pt)

Si usamos un umbral de 0 en la salida del modelo (lo que equivale a probabilidad de 0.5 cuando usamos el predict con type='response') ¿Cuales son los valores de precisión y exhausitividad?

**Respuesta**.

```{r}
set.seed(123)
idx <- sample(1:nrow(df_seeds), 0.7 * nrow(df_seeds))
df_seeds_train <- df_seeds[idx,]
df_seeds_test  <- df_seeds[-idx,]

modelo <- glm(tipo ~ area + perimetro + compacto + longitud + coeficient.asimetria +longitud.ranura,data = df_seeds_train, family = binomial)

summary(modelo)

predicciones <- predict(modelo, newdata = df_seeds_test, type = "response")
predicciones_de_clasificacion <- ifelse(predicciones > 0, "Kama", "No Kama")
precision <- mean(predicciones_de_clasificacion == df_seeds_test$tipo)
exhaustividad <- 1
print(precision)
print(exhaustividad)
```

#### PREGUNTA 11 (1.5pt)

¿Qué están haciendo las siguientes líneas?

```{r}
set.seed(123)
cl<-df_seeds |> select(area,perimetro,compacto,longitud,anchura,coeficient.asimetria,longitud.ranura) |> kmeans(3)
table(real=df_seeds$tipo,cluster=cl$cluster)
```

**Respuesta**:

```{r}
#en la primera línea se establece una semilla aleatoria
# luego se selecciona un subconjunto del Dataframe(df_seeds), donde se selecciona las columnas"(area,perimetro,compacto,longitud,anchura,coeficient.asimetria,longitud.ranura)", para aplicar un clusterinfg denomindado "kmeans"sobre este subconjunto de las columnas seleccionadas, el número 3 "kmeans(3)", es el número de clústeres que se quieren en el resultado del clustering que se almacenará en la variable "cl"
#Por último table(real=df_seeds$tipo,cluster=cl$cluster) crea una tabla que muestra la distribución de las observaciones reales que se comparan con las asignaciones del clúster del "kmeans".Se puede ver que tiene "real" que contiene las etiquetas reales del tipo de semilla y "clúster"que contiene las asignaciones de clúster generadas por el kmeans.
```
